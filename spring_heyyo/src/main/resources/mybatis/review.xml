<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<select id="getrcode" parameterType="int" resultType="String">
		select r_code from orders where order_num = #{order_num}
		
	</select>


	<select id="getbid" parameterType="String" resultType="String">
		select buisnessID from restaurant where r_code = #{r_code}
	
	
	</select>

	<select id="avgstar" parameterType="String" resultType="double">
		select avg(r.review_point) review_point 
		from 
		review r left join orders o 
		on r.order_num = o.order_num 
		where o.r_code = #{r_code} 
	
	</select>


    <insert id="create" parameterType="ReviewDTO">
	    insert into review(reviewnum,review_point,review_content,
	    review_image,review_date,order_num)
		values((select (nvl(max(reviewnum),0)+1) from review),
		#{review_point},#{review_content},#{review_image,jdbcType=VARCHAR},
		sysdate,#{order_num})
	</insert>
	
  	<select id="read" parameterType="int" resultType="ReviewDTO">
  	select * from review where reviewnum=#{reviewnum}
  	</select>
  	
  	<update id="update" parameterType="ReviewDTO">
  	update review 
	set 
	review_point = #{review_point},
    review_content=#{review_content},
    review_image=#{review_image,jdbcType=VARCHAR}
	where 
	reviewnum = #{reviewnum}
  	</update>
  	
  	<delete id="delete" parameterType="int">
  	delete review where reviewnum=#{reviewnum}
  	</delete>
  	
  	<select id="list" parameterType="Map" resultType="ReviewDTO">
	select 
	reviewnum,review_point,review_content,review_image,review_date,order_num,m_id,r_code,f_name,r_replycontent,r
	from(
	    select 
	    reviewnum,review_point,review_content,review_image,review_date,order_num,m_id,r_code,f_name,r_replycontent,rownum r
	    from(
	        select 
	        r.reviewnum reviewnum,r.review_point review_point,r.review_content review_content,
	        r.review_image review_image,r.review_date review_date,r.order_num order_num,o.m_id m_id,
	        o.r_code r_code,f.f_name f_name,p.r_replycontent r_replycontent 
	        from
	            review r inner join orders o 
	            on 
	            r.order_num = o.order_num
	            inner join 
	            orderdetail od
	            on
	            o.order_num=od.order_num
	            inner join 
	            food f
	            on
	            od.foodcode = f.food_code
	            left outer join
	            review_reply p
	            on
	            r.reviewnum = p.reviewnum
	            where o.r_code = #{r_code}
	            order by reviewnum desc
	    )
			<where>
				<choose>
					<when test="col=='f_name'">
						f_name like '%'||#{word}||'%'
					</when>
					<when test="col=='review_image'">
						review_image is not null
					</when>
					<when test="col=='review_point'">
						review_point like '%'||#{word}||'%'
					</when>
				</choose>
			
			</where>
			
			
			)
			<![CDATA[
			
		where r>=#{sno} and r<=#{eno}
			]]>
			
  	</select>
  	
  	<select id="total"	parameterType="Map" resultType="int">
  		select count(*) from review
  		<where>
  			<choose>
					<when test="col=='food_code'">
						food_code like '%'||#{word}||'%'
					</when>
					<when test="col=='review_image'">
						review_image like '%'||#{word}||'%'
					</when>
					<when test="col=='review_point'">
						review_point like '%'||#{word}||'%'
					</when>
				</choose>
  		</where>
  	</select>
</mapper>

